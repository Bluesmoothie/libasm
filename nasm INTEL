mov rax, rbx		//copie rbx dans rax
mov rax, 42			//copie 42 dans rax
mov rax, [rbx + 8]	//copie ce qu'il y a a l'adresse rxb+8 dans rax

.text: code
.data: donnees init
.bss: donnees non init

global exporte un symbole
extern importe un symbole
equ constante

;commentaire

ex:

; Fichier : hello.s
section .data
    message db 'Hello, World!', 0xA  ; Chaîne avec saut de ligne
    message_len equ $ - message      ; Longueur de la chaîne

section .text
    global _start

_start:
    ; Appel système write (1)
    mov rax, 1          ; Numéro syscall : write
    mov rdi, 1          ; Descripteur de fichier : stdout
    mov rsi, message    ; Pointeur vers la chaîne
    mov rdx, message_len ; Longueur de la chaîne
    syscall             ; Appel système

    ; Appel système exit (60)
    mov rax, 60         ; Numéro syscall : exit
    mov rdi, 0          ; Code de retour : 0
    syscall